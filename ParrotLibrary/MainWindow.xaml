<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ParrotLibrary"
      
        xmlns:DataModel="clr-namespace:ParrotLibrary.DataModel" x:Class="ParrotLibrary.MainWindow"
      
        mc:Ignorable="d"
        Title="Parrot Library" Background="#365F4A" MinWidth="600" Height="415.6" Width="850.4"    >
        
    <Window.Resources>
        <local:ImageDataValueConverter x:Key="IDConverter"></local:ImageDataValueConverter> 
        <local:LoadingMarginConverter x:Key="loadingMarginConverter"></local:LoadingMarginConverter>

         <local:ToggleButtonSelectConverter x:Key="ToogleConverter"></local:ToggleButtonSelectConverter> 

  
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListViewStyle1" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>

            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border   x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{DynamicResource ScrollViewerControlTemplate1}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>
        </ControlTemplate>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>

        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="white"/>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FontFamily" Value="{DynamicResource MenuFont}"/>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <StackPanel Orientation="Horizontal">
                                <Ellipse Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource ToogleConverter}}" x:Name="ClickedEllipse" Fill="#4CF89C" HorizontalAlignment="Center" Margin="0,0,5,0"  Width="10" Height="10"></Ellipse>
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" Value="0.5" ></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True" >
                                <Setter TargetName="ClickedEllipse" Property="Visibility" Value="Visible"/>


                            </Trigger>
                            <Trigger Property="IsChecked" Value="False" >
                                <Setter TargetName="ClickedEllipse" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Opacity" Value="0.6" />


                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    <!--
    <WindowChrome.WindowChrome>
        <WindowChrome 
         ResizeBorderThickness="6"  CaptionHeight="5"
            CornerRadius="50"
            GlassFrameThickness="0" />
    </WindowChrome.WindowChrome> -->

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="367*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition  MinWidth="200" MaxWidth="280"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel   Grid.Row="1"  Background="#FF365F4A" Margin="0,0"  >
            <StackPanel  Margin="0,10,0,0" VerticalAlignment="Center"  HorizontalAlignment="Center">

                <TextBlock FontFamily="{DynamicResource MenuFont}" Padding="6" Text="Parrot Library" Foreground="White" FontSize="28"  ></TextBlock>
                <TextBlock Text="Локальная энциклопедия" FontSize="18" Foreground="White"></TextBlock>
            </StackPanel>
            <StackPanel Margin="10,10">
                <Label Margin="0,0,0,5"  HorizontalContentAlignment="Center" FontSize="14" Foreground="White" FontFamily="{DynamicResource MenuFont}" Content="Поиск по попугаям"></Label>
                <TextBox  FontFamily="{DynamicResource MenuFont}" Foreground="#FF365F4A" VerticalContentAlignment="Center" TextChanged="SearchTextbox_TextChanged" x:Name="SearchTextbox" Height="26" TextInput="SearchTextbox_TextInput"></TextBox>
            </StackPanel>
            <StackPanel Margin="10,5,0,10">
                <ToggleButton x:Name="ParrotFromABC"  Margin="0,0,0,10"  Content="Попугаи по алфавиту" Style="{DynamicResource ToggleButtonStyle1}" Checked="ParrotFromABC_Checked" Unchecked="ParrotFromABC_Unchecked"/>

                <ToggleButton x:Name="ParrotFromGenderButton"  Margin="0,0,0,10" Content="Попугаи по родам" Style="{DynamicResource ToggleButtonStyle1}" Checked="ParrotFromGenderButton_Checked" />
              

                <ToggleButton x:Name="AboutAppButton"   Content="О приложении" Style="{DynamicResource ToggleButtonStyle1}" Checked="AboutAppButton_Checked"/>
            </StackPanel>


        </StackPanel>
        <ListView   VirtualizingPanel.IsVirtualizingWhenGrouping="True"  VirtualizingPanel.CacheLengthUnit="Item" VirtualizingPanel.CacheLength="60"     x:Name="ParrotListView" Grid.Column="1" Background="White"  BorderThickness="0"    Grid.Row="1"     SelectionChanged="ParrotListView_SelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{DynamicResource ListViewStyle1}" >>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel ItemWidth="250" VirtualizingPanel.CacheLengthUnit="Item" VirtualizingPanel.CacheLength="60"   VirtualizingPanel.IsVirtualizingWhenGrouping="True"   Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  ></WrapPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Margin" Value="10"></Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <Grid Grid.Column="0">
                            <Image   Width="200" Height="320" Stretch="UniformToFill" Source="{Binding Image,Converter={StaticResource IDConverter}}" >
                            </Image>
                            <StackPanel  VerticalAlignment="Bottom"   Margin="10,0,10,0" >
                                <StackPanel.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#00000000" Offset="0.02" />
                                        <GradientStop Color="#365F4A" Offset="1" />
                                    </LinearGradientBrush>
                                </StackPanel.Background>
                                <TextBlock Margin="10,50,10,30" FontFamily="{DynamicResource MenuFont}" TextAlignment="Justify"  FontSize="14" Width="176   "  TextWrapping="WrapWithOverflow"  Foreground="White" >
                                    
                                    <Run Text="{Binding Title}"></Run>

                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Margin="26,5,0,5" FontWeight="Bold" FontSize="22" Foreground="#365F4A" Text="{Binding Name}"/>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

        <Frame x:Name="FrameData" Background="White" Visibility="Collapsed"  Grid.RowSpan="2" Grid.Column="1"></Frame>
        <StackPanel Grid.RowSpan="2" Grid.ColumnSpan="2" Background="white" x:Name="LoadinPanel" Visibility="Visible">
            <Label FontFamily="{StaticResource MenuFont}" Foreground="#365F4A" FontWeight="Bold" Margin="{Binding Height, ElementName=LoadinPanel,Converter={StaticResource loadingMarginConverter}}" HorizontalAlignment="Center"  Content="Загрузка"></Label>
            <ProgressBar x:Name="LoadingProgressBar" Foreground="#365F4A"  Height="4" Width="Auto"   ></ProgressBar>
        </StackPanel>



    </Grid>
</Window>
